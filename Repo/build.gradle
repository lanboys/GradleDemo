
// 自动继承 根项目 build.gradle 的 buildscript 里的参数

//buildscript {
//    ext.kotlin_version = '1.2.30'
//
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
//}


// 在 根项目 build.gradle 的allprojects中 设定了这些公共参数 无需再次设定

//group 'com.bing.lan'
//version '1.0-SNAPSHOT'
//
//apply plugin: 'kotlin'

//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//}

//compileKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}
//compileTestKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}


dependencies {
//    implementation project(":Model")
}

//隐式 it, 内部没用引用 it 可以传参数, 或者不传，引用了必须传参数
//定义一个创建目录的闭包
def createDir = {
    File dir = new File(it)
    if (!dir.exists()) {
        dir.mkdirs()
    }
}

// 定义一个自动生成包的任务

task makeProjectJavaPackage() {
    def paths = ['src/main/java/com/bing/lan/task', 'src/test/java/com/bing/lan/task']
    println "--------------------------"
    doFirst {
//        paths.forEach(createDir)
        paths.forEach() { path ->
            println path
            File dir = new File(path)
            if (!dir.exists()) {
                dir.mkdirs()
            }
        }
    }
    println "======================"

}

task makeProjectKotlinPackage() {
    dependsOn makeProjectJavaPackage
    def paths = ['src/main/Kotlin/com/bing/lan/task', 'src/test/Kotlin/com/bing/lan/task']
    doLast {
        paths.forEach(createDir)
        paths.each(createDir)
    }
}