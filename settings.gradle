rootProject.name = 'GradleDemo'
include 'App'
include 'Repo'
include 'Bean'
include 'HelloPlugin'


def initMinshengGradleEnvironment() {
    println "initialize Minsheng Gradle Environment in settings.gradle ....."
    //干一些special的私活....
    println "initialize Minsheng Gradle Environment completes in settings.gradle ..."

    //属性值从local.properites中读取
    Properties properties = new Properties()
    File propertyFile = new File(rootDir.getAbsolutePath() + "/my.properties")
    properties.load(propertyFile.newDataInputStream())

    //gradle就是gradle对象。它默认是Settings和Project的成员变量。可直接获取
    //ext前缀，表明操作的是外置属性。api是一个新的属性名。前面说过，只在
    //第一次定义或者设置它的时候需要ext前缀,
    gradle.ext.api = properties.getProperty('sdk.api')
    ext.api = properties.getProperty('sdk.api')//gradle也可以省略，表示当前对象 settings

    println "========gradle.api=========" + gradle.api  //再次存取api的时候，就不需要ext前缀了
    println "========settings.api=========" + settings.api


}

//settings.gradle加载的时候，会执行initMinshengGradleEnvironment
initMinshengGradleEnvironment()
//include也是一个函数：

//在settings.gradle中，则输出"In settings,gradle id is"
println "In posdevice, gradle id is " + gradle.hashCode()
println "Home Dir:" + gradle.gradleHomeDir
println "User Home Dir:" + gradle.gradleUserHomeDir
println "Parent: " + gradle.parent